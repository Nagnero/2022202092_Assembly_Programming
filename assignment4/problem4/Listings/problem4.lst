


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             ARMex, CODE, READONLY
    2 00000000                 ENTRY
    3 00000000         
    4 00000000         start
    5 00000000 E59F0104        LDR              r0, TEMPADDR1
    6 00000004 E59F1104        LDR              r1, Value1  ; first value
    7 00000008 E59F2104        LDR              r2, Value2  ; second value
    8 0000000C         
    9 0000000C         ; get value1's sign bit
   10 0000000C E5801000        STR              r1, [r0]
   11 00000010 E5D03003        LDRB             r3, [r0, #3]
   12 00000014 E3530080        CMP              r3, #0x80
   13 00000018 23A03001        MOVCS            r3, #1
   14 0000001C 33A03000        MOVCC            r3, #0
   15 00000020         
   16 00000020         ; get value1's exponent bit
   17 00000020 E1D050B3        LDRH             r5, [r0, #3]
   18 00000024 E1A05885        LSL              r5, #17
   19 00000028 E1A05C25        LSR              r5, #24
   20 0000002C         
   21 0000002C         ; get value1's mantissa bit and add 1.0
   22 0000002C E5907000        LDR              r7, [r0]
   23 00000030 E1A07487        LSL              r7, #9
   24 00000034 E1A070A7        LSR              r7, #1
   25 00000038 E2877102        ADD              r7, r7, #0x80000000
   26 0000003C E1A07427        LSR              r7, #8
   27 00000040         
   28 00000040         ; get value2's sign bit
   29 00000040 E5802000        STR              r2, [r0]
   30 00000044 E5D04003        LDRB             r4, [r0, #3]
   31 00000048 E3540080        CMP              r4, #0x80
   32 0000004C 23A04001        MOVCS            r4, #1
   33 00000050 33A04000        MOVCC            r4, #0
   34 00000054         
   35 00000054         ; get value2's exponent bit
   36 00000054 E1D060B3        LDRH             r6, [r0, #3]
   37 00000058 E1A06886        LSL              r6, #17
   38 0000005C E1A06C26        LSR              r6, #24
   39 00000060         
   40 00000060         ; get value2's mantissa bit and add 1.0
   41 00000060 E5908000        LDR              r8, [r0]
   42 00000064 E1A08488        LSL              r8, #9
   43 00000068 E1A080A8        LSR              r8, #1
   44 0000006C E2888102        ADD              r8, r8, #0x80000000
   45 00000070 E1A08428        LSR              r8, #8
   46 00000074         
   47 00000074         
   48 00000074 E1550006        CMP              r5, r6      ; compare exponent
   49 00000078 CA000002        BGT              val1greater
   50 0000007C BA000006        BLT              val1lesser
   51 00000080 E1A0B005        MOV              r11, r5     ; save result expon
                                                            ent if exponent is 
                                                            equal
   52 00000084 EA000009        B                comparesign
   53 00000088         
   54 00000088         val1greater                          ; exponent of val1 
                                                            > val2
   55 00000088 E0459006        SUB              r9, r5, r6  ; r9(shift num) = r
                                                            5 - r6



ARM Macro Assembler    Page 2 


   56 0000008C E0866009        ADD              r6, r6, r9  ; increase val2 exp
                                                            onent
   57 00000090 E1A08938        LSR              r8, r9      ; right shift val2 
                                                            mantissa
   58 00000094 E1A0B005        MOV              r11, r5     ; save result expon
                                                            ent
   59 00000098 EA000004        B                comparesign
   60 0000009C         
   61 0000009C         val1lesser                           ; exponent of val1 
                                                            < val2
   62 0000009C E0469005        SUB              r9, r6, r5  ; r9(shift num) = r
                                                            6 - r5
   63 000000A0 E0855009        ADD              r5, r5, r9  ; increase val1 exp
                                                            onent
   64 000000A4 E1A07937        LSR              r7, r9      ; right shift val1 
                                                            mantissa
   65 000000A8 E1A0B006        MOV              r11, r6     ; save result expon
                                                            ent
   66 000000AC EAFFFFFF        B                comparesign
   67 000000B0         
   68 000000B0         
   69 000000B0         comparesign
   70 000000B0 E1530004        CMP              r3, r4      ; check sign
   71 000000B4 01A0A003        MOVEQ            r10, r3     ; save result sign 
                                                            bit
   72 000000B8 0087C008        ADDEQ            r12, r7, r8 ; if sign is same, 
                                                            add mantissa
   73 000000BC 0A000004        BEQ              check10     ; and go to nomarli
                                                            zation
   74 000000C0 E1570008        CMP              r7, r8      ; if sign is differ
                                                            ent, compare mantis
                                                            sa
   75 000000C4 C047C008        SUBGT            r12, r7, r8
   76 000000C8 C1A0A003        MOVGT            r10, r3     ; save result sign 
                                                            bit
   77 000000CC D048C007        SUBLE            r12, r8, r7
   78 000000D0 D1A0A004        MOVLE            r10, r4     ; save result sign 
                                                            bit
   79 000000D4         
   80 000000D4         
   81 000000D4         ; nomarlization process
   82 000000D4         check10
   83 000000D4 E35C0401        CMP              r12, #0x01000000 ; check mantis
                                                            sa > 10.xx
   84 000000D8 A1A0C0AC        LSRGE            r12, #1     ; right shift resul
                                                            t mantissa
   85 000000DC A28BB001        ADDGE            r11, #1     ; increase result e
                                                            xponent
   86 000000E0 AAFFFFFB        BGE              check10
   87 000000E4         
   88 000000E4         check1
   89 000000E4 E35C0502        CMP              r12, #0x00800000 ; check mantis
                                                            sa < 0.xx
   90 000000E8 B1A0C08C        LSLLT            r12, #1     ; left shift result
                                                             mantissa
   91 000000EC B24BB001        SUBLT            r11, #1     ; decrease result e
                                                            xponent
   92 000000F0 BAFFFFFB        BLT              check1
   93 000000F4         



ARM Macro Assembler    Page 3 


   94 000000F4         finish                               ; after normarlizat
                                                            ion
   95 000000F4 E24CC502        SUB              r12, #0x00800000 ; sub matissa 
                                                            bit 1.0
   96 000000F8 E1A0AF8A        LSL              r10, #31
   97 000000FC E08AAB8B        ADD              r10, r10, r11, LSL #23 ; add ex
                                                            ponent bit to resul
                                                            t
   98 00000100 E08AA00C        ADD              r10, r10, r12 ; add mantissa bi
                                                            t to result
   99 00000104 E580A000        STR              r10, [r0]   ; store result to r
                                                            0
  100 00000108 EA000002        B                endline
  101 0000010C         
  102 0000010C         
  103 0000010C 00040000 
                       TEMPADDR1
                               &                &40000
  104 00000110 FFF00000 
                       Value1  DCD              0xFFF00000
  105 00000114 C1F00000 
                       Value2  DCD              0xC1F00000
  106 00000118         
  107 00000118         endline
  108 00000118 E1A0F00E        MOV              pc, lr
  109 0000011C                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=ARM9E --apcs=interwork 
--depend=.\objects\problem4.d -o.\objects\problem4.o -IC:\Keil_v5\ARM\RV31\INC 
-IC:\Keil_v5\ARM\CMSIS\Include --predefine="__EVAL SETA 1" --predefine="__UVISI
ON_VERSION SETA 529" --list=.\listings\problem4.lst problem4.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

ARMex 00000000

Symbol: ARMex
   Definitions
      At line 1 in file problem4.s
   Uses
      None
Comment: ARMex unused
TEMPADDR1 0000010C

Symbol: TEMPADDR1
   Definitions
      At line 103 in file problem4.s
   Uses
      At line 5 in file problem4.s
Comment: TEMPADDR1 used once
Value1 00000110

Symbol: Value1
   Definitions
      At line 104 in file problem4.s
   Uses
      At line 6 in file problem4.s
Comment: Value1 used once
Value2 00000114

Symbol: Value2
   Definitions
      At line 105 in file problem4.s
   Uses
      At line 7 in file problem4.s
Comment: Value2 used once
check1 000000E4

Symbol: check1
   Definitions
      At line 88 in file problem4.s
   Uses
      At line 92 in file problem4.s
Comment: check1 used once
check10 000000D4

Symbol: check10
   Definitions
      At line 82 in file problem4.s
   Uses
      At line 73 in file problem4.s
      At line 86 in file problem4.s

comparesign 000000B0

Symbol: comparesign
   Definitions
      At line 69 in file problem4.s
   Uses
      At line 52 in file problem4.s
      At line 59 in file problem4.s
      At line 66 in file problem4.s




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

endline 00000118

Symbol: endline
   Definitions
      At line 107 in file problem4.s
   Uses
      At line 100 in file problem4.s
Comment: endline used once
finish 000000F4

Symbol: finish
   Definitions
      At line 94 in file problem4.s
   Uses
      None
Comment: finish unused
start 00000000

Symbol: start
   Definitions
      At line 4 in file problem4.s
   Uses
      None
Comment: start unused
val1greater 00000088

Symbol: val1greater
   Definitions
      At line 54 in file problem4.s
   Uses
      At line 49 in file problem4.s
Comment: val1greater used once
val1lesser 0000009C

Symbol: val1lesser
   Definitions
      At line 61 in file problem4.s
   Uses
      At line 50 in file problem4.s
Comment: val1lesser used once
12 symbols
344 symbols in table
